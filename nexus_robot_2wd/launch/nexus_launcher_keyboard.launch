<launch>

  <arg name="hector_slam" default="true"/>
  <arg name="_odom_frame" default="odom"/>

  <!--Launch Lidar-->
  <arg name="_ip_address" default="192.168.0.10"/>
  <node pkg="urg_node" type="urg_node" name="hokuyo_lidar" args="_ip_address:=$(arg _ip_address)"/>

  <!--Launch keyboard-->
  <include file="$(find minion_teleop)/launch/keyboard_teleop.launch"/>

  <!--Launch cmd_vel transformation-->
  <node pkg="minion_teleop" type="cmd2vec3" name="cmd2vec3" output="screen"/>

  <!--Launch Arduino-->
  <node pkg="rosserial_python" type="serial_node.py" name="serial_node" output="screen">
    <param name="port" value="/dev/arduino_2wd"/>
    <param name="baud" value="57600"/>
  </node>

  <!--Launch Odometry publisher and transform-->
  <node pkg="nexus_robot_2wd" type="nexus_robot_odometry_2" name="nexus_robot_odometry" output="screen">
    <param name="publish_rate" value="50.0"/>
    <param name="angle_interpolation" value="2.0"/>
    <param name="angular_scale_positive" value="1.0"/>
    <param name="angular_scale_negative" value="1.0"/>
    <param name="linear_scale_positive" value="1.0"/>
    <param name="linear_scale_negative" value="1.0"/>
  </node>

  <!-- <node pkg="nexus_robot_2wd" type="odom2path.py" name="path" output="screen"/> -->
  <node pkg="hector_trajectory_server" type="hector_trajectory_server" name="trajectory_server" output="screen">
    <param name="source_frame_name" value="base_footprint"/>
  </node>

  <!--Launch Transforms-->
  <node pkg="tf2_ros" type="static_transform_publisher" name="map_odom_broadcaster" args="0 0 0.029 0 0 0 1 /map /odom" />
  <node pkg="tf2_ros" type="static_transform_publisher" name="Lidar_scan_broadcaster" args="0.0 0 0.1 0 0 0 1 base_footprint laser" />

  <group if="$(arg hector_slam)">
    <include file="$(find nexus_robot_mapping)/launch/hector/nexus_hector_mapping_odometry.launch">
      <arg name="odom_frame" value="$(arg _odom_frame)"/>
    </include>
  </group>

  <group unless="$(arg hector_slam)">
    <include file="$(find nexus_robot_mapping)/launch/gmapping/nexus_gmapping.launch">
      <arg name="odom_frame" value="$(arg _odom_frame)"/>
    </include>
  </group>

</launch>
